<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="imageList2.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>128, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAOEAAADhCAMAAAAJbSJIAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAEvUExURZnAiXqXa1dXV+zs7LzRwPDw8EFBQerq6kxMTFFRUeDg4FdWV/Hx8VthVn6YcXuWbZrB
        iF1gXXyZaUpQS5zFh2x3ZZm+i6i2rFRaV0hGSLXHuvWjTZyun7u7u7XMuZOTk52dnbCwsMDAwIuLi6am
        pn9/f+6cQwAAAE5RVq1vMT5FS4WndXBwcMSOUtbW1szMzPj///zUr/WoWWpqav+lT4BmTfn68BgYGDU1
        NRAQEHqEfyEhISsrK11lYHd3d7/Rw4qWjW14Z36Td2h8YJKziISieWV6XmBtXZ6mnW93bmp4cKa8romY
        iE9ZW1xSW45wUbiKWHFdSkpVY/rGkvnSw/ezce3Ik/bo1frjw/u9h7eAQYFcN9SMQ+mWO9uLNXRaOKF0
        PWBSP0xSRz47Qj5DPC9tEUUAAA94SURBVHhe7Z0Lmxq3FUDZwZoHM7Yhu8HL2iwMDGFTE3DMpoDB+JXE
        dt0kTdL0lbpN1/7/v6FX0pVGwwxrA/NQv8752hqhZbkH3dFId7XdSklJSUlJSUlJSUlJSUlJSUlJSUlJ
        SUlJSUlJSUlJSUlJiRbUK81KpZkL9Tq+Z7406yf1ev0kD4oRrDdvvfj02afZ8+zZ82Yhis9P7Qs3Fy4u
        Tp/XT+CSyJcXjpEbruG8qJzgG+fFc8fFt88D98J5nmui1utfu3kKAu7pN/C2+P45cPI8xxxluM639+H+
        lBfNk9c5DyEovrx9H98+D04e52948/Yn31RyuzOe3CzE8Ci/RA0NXSdj8H2Y4W1QzIdmXWbp8aM7mfLo
        GGdt9+bRJ0dHoJhLogpD1zh+decsU+68svkwsixlinkgDc2nZ09uZMvZoxZ/L5aleSk26w36poZjv8E4
        UuXscYPDPr4379kgujdvHTHDXBJVGNpGFiP45OnjR4zRa9Y8taOGeYyiNGxkY2jyB1sM85hRpeHjG1ko
        Pm3xfx8zwxunraghkHmiFm6Y+SjmZDjdasgSNctRzNoQr8PXaLg50zCyTdSMDV+9Oqc3+/M7T1kz2TDb
        RM3Y8N698/Oz8/PrDbNN1GwNn4jr8PWI/bNlDDNN1KwNbf5AzKXbDDNMVGl4M9sx/IBhhomataFY0/yB
        /ZN0PxRAomJM6aIYZgAzpJ/cazTcmqVARokqDU9ZCCnz5GkDV97M8Ow6w6wSVRpms3t6grun0zPausO3
        wFvGMKNElYbm03MWU6qc33iC0NbZI/O6LAWySFRh6LSO772BW3N2nL25d9y6fgypYurVcGFotFqnf7yX
        Ja+eHrfYVHqdYQaJKg2dVsu0TzPk2LT5EF5rmH6iSkOqmDFYarvekCqmmqihIThmDL7NBwzTTlTVMC8+
        YJhyoupomG6iaml4dL+eXqLqaZhmouppSNeoad36NR1DOooZGDr2BmKCd+M9+CO5hB7eAbcefELysXcL
        JK1EDQ2dadffIBjAStk17FGAT0iCEVtD2+t4z5SZ2ANsh3Qb4gP7KEM6imnMN9LQGZAYnheAiN0hXhWf
        CelCuHbgedgUwBN92uNvdkCXtRY/If0ow5QSNRzDGqlaVnUDbwDh4mMFyyIEXjeCl+AzAgv6IEMHXuxb
        VUm1xgb+ow3TSVRh6K49DIRjEfYP8W2nA9FivGgE/2N5XccJ5GvkVwBe37Xb/OWA+ql5fBA/2jCVRBWG
        Tp9gUJBoAMiwRtu2uwSDtOBZ4WSRwLF96UHTGB8S0nHsnuyBLgnLiF0M00jU0BAjId0WTKGQf7zVtp2u
        iNYazOfrGjaqqiH0mIFoeB2nNQkNg3A8dzdMIVEVQz5SXrvfHywNwgdONfT6i253IT+JwJaGtGcwRCsL
        xrCFYwhZXZsZchT3MDw8UWOGMId4wQIGJG64Xlq1ZZJh1V49sIQ7NZRZCvles2jS89YehgcnaswQsMy5
        hdeeakjGLdO2YcrlrdDQ8ozZxJ/hXKUYkvGA0+FdexkemqgJhp6/wIg2DCem4cx9wmdH1bDaWy1a80GC
        odliy5npIYYHJmo8Sy3izOR0EslSe25V56YXN7RIbTye4ceiZimflwHW2tcQNlMHJKpiyKMAqUV4b4wY
        Gst2b+VwQ7hbKGNYm0wa4mOJXIeQ7atpmB17Gh6UqPEsJdPVhD+iAbL7IW+QiTObOeI+wAz5wyrpLRbz
        tryhhnMpZd2Vn9fehjRR9x3GhDGsicmEph8dQ9lTHddwJQDRsjEUo1Mbyw64H7qqoVwkUMMd1zQh+8+o
        wtAdyUWJCoyUMgfRhBTAfV3mL4DzD4UMXFh4YwMIX0Om/L12N2Q/ttkPYWjI9ItQG8FOcJzQQ2rwkqkc
        bQUydgxnjevaCGSy48o7wr6K0rC1ntSs2gbjrgk9feiJdEFr3G8ZhtkZ4zMSqzYZQE+rG+up1SbrD1f1
        r2FPRWlomNNOd5MBrcM75gibCmuT9ayxGdIZwYdiOPYA2wpT2gPsaXiEIe9IaOi2zDhs7nO292BDhZ8h
        TXoN/tiiMMMEsBhzHR/xJTE0MsyI0nAbGPKOKIYuWyRHwAvH2SwNOjZmZ7yaKF+DTYkjf4GsKENnGrSx
        7oe0fb7KckZ+O9IFrTXrsdfwRRHawYj3DDZ62qLOWJihM4hVBmFn4LNqYrwySLwt1UR4zZZqYtWz+MdS
        lKEbLq5CLA+CaiQtdqpewzVGuJOKYhmOC6vc2KtgC3LImuZQw8QKJ+wtfMeR22EVWk20A7nyVsFq4mYX
        tMmu1cQoGPKOSEO5vqb/yM8/sreAtWYYtrI/pCjrdmV/yL7cAljrgN0TA0PekbghLKptWyy2VUPiz+fz
        lbCKGHo9e2aOsRHdAcMD8VX6GE6Xs4iheOwvur4vexRDMlkY7UDWqJQxJOMe/Ed8Z00MPX/VXyQZesGi
        XZPXpGroDWZwYWJDrWJY1fGwO22IUdTDkNRW3WC4xXC4MORIq2PotIyl6Ikaev5yLn+ooYehN3K8ZEMy
        Htf6C3lVSkN4nb30u7OkijCkNhiKhiZZOlvBhLLEHb9qSAvY4xlWRdUxtDxj9aC2jFeEgdowaE01M4QV
        1mDWxdJgdKYJfGMhM1O9DjvDdiBGN2JIekF1EojyqyaGVViRbWQp5m9nOJwL3Wi91JoOhyP2GIhmKVGK
        bUUbYhgAwXkRzKJZCstOfAxjGPn5oWWFHqphhAOqiRQMeUekofiJIQfHk/2kV1x5DDHQFiyw7a4cdzAO
        X7OOVhNDyLRAw+RqIqmNICaRslRBfBGpNRw3Wk2kj+G/11QTe0WuvGGrN8Gin4KsJsaY9KHH7CT10Gqi
        mVRN7PEjKkUZJlYTWc3QMEfxnpEJg5tUZ+xMWZ2xlVBnbBRcTXRsLPop8Prf9srgNT3YUuH14OIM80ND
        QzYDpodWhim7cYozxLKfAruk3KRzhqwH+rAtcfh0CeATIfIoe2EzzdRvb0LPJtIbSazHX/OeAbZDfF5N
        dPo9fELQ8wuuJtp9etQrCuzuQASWLthW8Lq0J+kEIq8mtmPfDL4dX5YWNoZJqxDLG0CSit27gkU8eN1a
        WbUp0BH05PouhBRcTUwSJPRsorr6DKErb3mULQKBFWsPH0chvCRckKHcPVkWbCL4Q4hJOYtBtxzh2UR+
        UoE9hB7YYMnXb99bkAF7r4INLVg6G3OxZ43sgHvOyuzwx9BS9ockWC3nA9xGRvf4ETTZAZNguZKHoiKG
        wShI3uMTv+tPF3ie9n/BsD9aJBlChKQnznZFDCF/H/hDvCo3KlEM/NZ6GBKLeGCIEUYNq9ATORMlPbrG
        UlQxVEPI3w4gzljpUqexyNYxDIZyyo0Yev6gZaJ71LDb7/cH4lPRxZCOVKKhF8ym4SY/Yuh5k0VfWEWy
        lJ5MlF+muaHXnc19X5zaVgytauD7jeTrMII+hutV0nXojebz1RIPw6rVREJGs9lc3Ec0NsQwKFIWDMOK
        mkWPe4kuZoiPq9VaLfzJDD2rD4bye4QUaih//yCCBQvsaDVRAgts9rsmcWBtFl6hUfY+m8jAkHdEGtoT
        5ce4AlKbwu5wnNBTHcNrks4mEjJxDGeU2FNwNXGUVBns0GriILGaSE8gJlYT6QnEVvzUog7VxD69O0cY
        0f8jC9ecdjpdfIYBDV4zNEf4jAI7gWi31pFXMIquJiadTdyrZshqO0mvEcelijLMj9JwGxjyjvxfGSac
        TcRy6XWnFrEdwnvcixjOd8b3p6yvIEN77fc2aNOyGfQM2viEpN1nE7/dj/fwWszFD19s8qcfL4zvaV9B
        hrBsI7hfDfHaIJJcTWS/A51QTSRex4YR/OLy8u6lyt27l3d/+OkmfauixjBhAWbBShJ6EtdmvJqIDRXL
        Mk5/+uFuIt+xtC/GMHn1aYnfdI4Be1vbDqpJhxNhxQpDiE4RLn8s0hD3r4BnieKwxfcWCatSureA9XWi
        O+wt0PCzEG741UWRhiJa0lnNRuKgVmSPD8gxU/eHgEXCX3wKDX/+UvDnX6jj5VcFzqXSkLSHA38oRjRq
        6I3HUjFq6PXD32MThg/f/vWB5C9UWQ9Dr78Ye3M74Tedq6S/XMpkjhgSbxCE1Rgxhp+FY/ilRmPojZY1
        z5njXl41JOPlfL6Up6VCQ5h1Osa0I87QJF2Hb1lbkyxdM0PeiBuKs7XKdQjXbNB1R11RowoNH0p+oU29
        spQGDkSztANZKm4qapZaiVn68FK5Dn/WaKbpDQcBnWlCQyFlwUyDXxU1hJYy0xB5Hf7t95K/6zOGcDtb
        LqbJdwt52BeIGqp3C2l4+RCvQrwdamIIisSCx7wFC1NlDGEFIB09dsfHBnUXhvSOf8yvwxDevPyKvVcx
        hi6vJtLfjYBQ+T8QMq8m0tjxKQb9SqwmbkBdydq5+MeGIafQVdvWaqJDq4nYVCBjw3UbCTXDqjdxTn/6
        FfMywuU/7QKytCINR714AXC8vZo4gB4z4dTieLJuuVetz9++xUtQ8vZf/74QhvyvsOwIRrwjdfm3gsxG
        vJrIaoaJdUasJk6xGdKnNUPXMX/97fMNfvsP1gzEX9LZFQx5R+onDTQ0tp9NTOjhxYrEmiHtMJx35u82
        sS/4KbK8DU+FYaq4p/g3HUPo01jFwL8VtCMY8q6cXGVieB3O1VG+huJga260rvLM0srJzXf8yskN27y6
        nevd4sU7U9RF84D+qOPl7X0E9zWsfD0338EMmBN08n1/G8CodwED3pF6pfISBPPjvfnuJUa8KxjyztSb
        V3kqtt5d3dprntnfEBRfvse3z55371/ewoB3BuPdneZJ8/nLq+NcuPr2FvvrjnuB8e5DvXL/9if5sN8c
        w8Fo92TvD3YX6BxakGEzJ8XDwGD3pbnXUjFXMNI9qdeb2o8ihrovdRjFvVaL+YGRHoDuiYph7o/2iYpx
        HgBN1AMm88zBMA+j+Q1+Nx3BGA9C70TFIA9F40TFCA9G31HEAA9F40TFCFNA10TF8NJA01HE6FIAEhW/
        p15geKlQr+iYqBhcSjTv47fVCAwtHbRMVIwtLTRMVIwsPbSbUTGu1NAvUTGwFNEtUTGsVNErUTGoNNFs
        jYpRpQso6pOnGFPK6DSKGFLKQKJqU9jAkFJHn0TFgNJHm0TFeNJHm0TFeLKg3ryvQ6JiNJmgR6JiMJlQ
        hwVc8T+2wWAyQocZFUPJCg0SFSPJinqlQv+wVJFgJNlReKJiHBlSdKJiGBlSdKJiGJlSbKJiENkCqxt8
        uwLAGLKFndgoCowha+qVgkbx6Oi/jYMUqKdMAq0AAAAASUVORK5CYII=
</value>
  </data>
</root>